(window.webpackJsonp=window.webpackJsonp||[]).push([[25],{371:function(a,t,n){"use strict";n.r(t);var e=n(42),r=Object(e.a)({},(function(){var a=this,t=a.$createElement,n=a._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h2",{attrs:{id:"随机选取-10-100-之间的-10-个不重复的数字-存入一个数组-并按从小到大顺序进行排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#随机选取-10-100-之间的-10-个不重复的数字-存入一个数组-并按从小到大顺序进行排序"}},[a._v("#")]),a._v(" 随机选取 10~100 之间的 10 个不重复的数字，存入一个数组，并按从小到大顺序进行排序")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("    const arrS = []\n    for (let i = 0; i <= 10; i++) {\n        // 随机生成 10 到 100 的数字\n        const num = Math.floor(Math.random() * 90 + 10)\n        // 去重\n        if (arrS.length < 10 && !arrS.includes(num))\n        arrS.push(num)\n    }\n    // 排序\n    let len = arrS.length;\n　　for (let i = 0; i < len; i++) {\n　　　　for (let j = 0; j < len - 1 - i; j++) {\n　　　　　　if (arrS[j] > arrS[j+1]) { //相邻元素两两对比\n　　　　　　　　let temp = arrS[j+1]; //元素交换\n　　　　　　　　arrS[j+1] = arrS[j];\n　　　　　　　　arrS[j] = temp;\n　　　　　　}\n　　　　}\n　　}\n    console.log(arrS, 'arr');\n")])])]),n("h2",{attrs:{id:"冒泡排序"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#冒泡排序"}},[a._v("#")]),a._v(" 冒泡排序")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("function bubbleSort(arr) {\n    let len = arr.length;\n　　for (let i = 0; i < len; i++) {\n　　　　for (let j = 0; j < len - 1 - i; j++) {\n　　　　　　if (arr[j] > arr[j+1]) { //相邻元素两两对比\n　　　　　　　　let temp = arr[j+1]; //元素交换\n　　　　　　　　arr[j+1] = arr[j];\n　　　　　　　　arr[j] = temp;\n　　　　　　}\n　　　　}\n　　}\n　　return arr;\n}\n")])])]),n("h2",{attrs:{id:"v-if-v-for-优先级"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#v-if-v-for-优先级"}},[a._v("#")]),a._v(" v-if v-for 优先级")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("首先 vue官方： 不推荐在同一元素上使用 v-if 和 v-for\n当它们处于同一节点，v-for 的优先级比 v-if 更高，这意味着 v-if 将分别重复运行于每个 v-for 循环中\n")])])]),n("h2",{attrs:{id:"_9个元素三个三个一行布局"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_9个元素三个三个一行布局"}},[a._v("#")]),a._v(" 9个元素三个三个一行布局")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("弹性盒\ndisplay:flex;\nflex-wrap: wrap; \n子元素展宽比\nflex-basis: 32% 百分比\n\n浮动\n\n* {\n    padding: 0;\n    margin: 0;\n    list-style: none;\n}\n.wrap {\n    width: 100%;\n}\n.wrap ul {\n    margin-bottom: 10px;\n    width: 100%;\n}\n.float li{\n    float: left;\n}\n.float:after {\n    content: '';\n    display: block;\n    clear: both;\n    overflow: hidden;\n}\n.wrap ul li {\n    width: 32%;\n    background-color: red;\n    margin-top: 10px;\n}\nli:nth-of-type(3n) {\n    margin-right: 1%;\n}\nli:nth-of-type(3n - 2) {\n    margin-left: 1%;\n}\nli:nth-of-type(3n - 1) {\n    margin-left: 1%;\n    margin-right: 1%;\n}\n\n有个问题最后一行的元素需要 margin-bottom: 0;或者单独的样式处理 下面请看\n/* 使用选择器重置最后一行的格子下边距为0 */\n.item:nth-child(3n+1):nth-last-child(-n+3),\n.item:nth-child(3n+1):nth-last-child(-n+3)~.item{\n    margin-bottom: 0;\n}\n\n原来css选择器还可以级联使用！当然我们都知道css选择器是从右向左匹配的，那么上面这个是什么意思呢？nth-last-child(-n+3)选择的是容器中的最后3个元素，nth-child(3n+1)选择第（3n+1）个元素，也就是第一列的元素（因为每行展示3个元素，多以两种选择都合3有关），两者的交集恰好就是最后一行的第一个元素，也就是左下角的这个元素。但是最后一行的元素个数也并不确定，为了完整的匹配到其后的元素，我们使用通用兄弟选择器~来选中该目标后面的兄弟元素，这样两者结合便可以保证总是找全最后一行的元素，而不用管该行是否占满。\n")])])]),n("h2",{attrs:{id:"v-model-双向数据绑定"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#v-model-双向数据绑定"}},[a._v("#")]),a._v(" v-model 双向数据绑定")]),a._v(" "),n("h2",{attrs:{id:"跨域"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#跨域"}},[a._v("#")]),a._v(" 跨域")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("jsonp\njwt json-web-token\ncors\n本地 tableProxy\n")])])]),n("h2",{attrs:{id:"跨域cors-什么时候出发预检请求options"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#跨域cors-什么时候出发预检请求options"}},[a._v("#")]),a._v(" 跨域cors 什么时候出发预检请求options")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("请求分为简单请求和非简单请求\n当我们请求非简单请求的时候会触发 预检请求，\n\n满足下面的所有条件就不会产生预检请求，也就是该请求是简单请求：\n\n请求方法是GET、POST、HEAD其中任意一个\n\n    必须是下面定义对CORS安全的首部字段集合，不能是集合之外的其他首部字段。\n    Accept、Accept-Language、Content-Language、Content-Type、DPR、Downlink、Save-Data、Viewport-Width、Width。\n    \n    Content-Type的值必须是text/plain、multipart/form-data、application/x-www-form-urlencoded中任意一个值\n\n满足上面所有的条件才不会发送预检请求，在实际项目中我们的请求格式可能是application/json格式编码，或者使用自定义请求头都会触发CORS的预检请求。\n")])])]),n("h2",{attrs:{id:"项目遇到的问题及解决"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#项目遇到的问题及解决"}},[a._v("#")]),a._v(" 项目遇到的问题及解决")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("说一些问题\n")])])]),n("h2",{attrs:{id:"项目的亮点"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#项目的亮点"}},[a._v("#")]),a._v(" 项目的亮点")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("介绍项目\n")])])]),n("h2",{attrs:{id:"自我介绍"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#自我介绍"}},[a._v("#")]),a._v(" 自我介绍")]),a._v(" "),n("h2",{attrs:{id:"dialog-居中实现方式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#dialog-居中实现方式"}},[a._v("#")]),a._v(" dialog 居中实现方式")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("1:\n    定位\n    #father{\n     position:relative;\n    }\n   #son{\n     position: absolute;\n     left: 0;\n     top: 0;\n     right: 0;\n     bottom: 0;\n     margin:auto;\n    }\n2:  弹性盒\n    display: flex;\n    justify-content: center;\n    align-items: center;\n3： 定位加边距负一半 \n    #father{\n     position:relative;\n    }\n   #son{\n     position: absolute;\n     left:50%;\n     margin-left: -50px;\n     top:50%;\n     margin-top: -50px;\n    }\n3： 定位加calc负一半\n    #father{\n     position:relative;\n    }\n   #son{\n     position: absolute;\n     left:calc(50% - 50px);\n     top:calc(50% - 50px);\n    }\n4： 定位加边位移\n    #father{\n     position:relative;\n    }\n   #son{\n     position: absolute;\n     left:50%;\n     top:50%;\n     transform: translate(-50%, -50%);\n    }\n\n")])])]),n("h2",{attrs:{id:"vue-兄弟组件传值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vue-兄弟组件传值"}},[a._v("#")]),a._v(" vue 兄弟组件传值")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("eventBus\nvuex\n状态提升\n")])])]),n("h2",{attrs:{id:"捕获-peomise-异步代码报错"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#捕获-peomise-异步代码报错"}},[a._v("#")]),a._v(" 捕获 peomise 异步代码报错")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("unhandledrejection 捕获异代码报错\n当Promise 被 reject 且没有 reject 处理器的时候，会触发 unhandledrejection 事件；这可能发生在 window 下，但也可能发生在 Worker 中。 这对于调试回退错误处理非常有用。\n")])])]),n("h2",{attrs:{id:"介绍下cdn"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#介绍下cdn"}},[a._v("#")]),a._v(" 介绍下cdn")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("CDN的全称是(Content Delivery Network)，即内容分发网络。其目的是通过在现有的Internet中增加一层新的CACHE(缓存)层，\n将网站的内容发布到最接近用户的网络”边缘“的节点，使用户可以就近取得所需的内容，提高用户访问网站的响应速度。\n从技术上全面解决由于网络带宽小、用户访问量大、网点分布不均等原因，提高用户访问网站的响应速度。\n简单的说，CDN的工作原理就是将您源站的资源缓存到位于全球各地的CDN节点上，用户请求资源时，就近返回节点上缓存的资源，\n而不需要每个用户的请求都回您的源站获取，避免网络拥塞、缓解源站压力，保证用户访问资源的速度和体验\n")])])]),n("h2",{attrs:{id:"为什么使用cdn"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#为什么使用cdn"}},[a._v("#")]),a._v(" 为什么使用cdn")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("cnd 加速 快 \n\n1、网站站点/应用加速\n站点或者应用中大量静态资源的加速分发，建议将站点内容进行动静分离，动态文件可以结合云服务器ECS，静态资源如各类型图片、html、css、js文件等，\n建议结合 对象存储OSS 存储海量静态资源，可以有效加速内容加载速度，轻松搞定网站图片、短视频等内容分发；\n\n2、视音频点播/大文件下载分发加速\n支持各类文件的下载、分发，支持在线点播加速业务，如mp4、flv视频文件或者平均单个文件大小在20M以上，主要的业务场景是视音频点播、大文件下载（如安装包下载）等，\n建议搭配对象存储OSS使用，可提升回源速度，节约近2/3回源带宽成本。\n3、视频直播加速（内测中）\n视频流媒体直播服务，支持媒资存储、切片转码、访问鉴权、内容分发加速一体化解决方案。\n结合弹性伸缩服务，及时调整服务器带宽，应对突发访问流量；结合媒体转码服务，享受高速稳定的并行转码，且任务规模无缝扩展。\n目前CDN直播加速已服务内部用户测试并优化，即将上线，敬请期待\n4、移动应用加速移动\nAPP更新文件（apk文件）分发，移动APP内图片、页面、短视频、UGC等内容的优化加速分发。提供httpDNS服务，避免DNS劫持并获得实时精确的DNS解析结果，有效缩短用户访问时间，提升用户体验\n\n")])])]),n("h2",{attrs:{id:"vuex-存值-模块化划分-怎么避免命名冲突"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vuex-存值-模块化划分-怎么避免命名冲突"}},[a._v("#")]),a._v(" vuex 存值 模块化划分 怎么避免命名冲突")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("模块化，团队约定，根据场景命名\n")])])]),n("h2",{attrs:{id:"vuex-怎么存值"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#vuex-怎么存值"}},[a._v("#")]),a._v(" vuex 怎么存值")]),a._v(" "),n("div",{staticClass:"language- extra-class"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[a._v("vuex 命名视图 mapActions mapGetters \n")])])])])}),[],!1,null,null,null);t.default=r.exports}}]);